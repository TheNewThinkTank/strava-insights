---
name: strava-insights Workflow

on:
  push:
    branches: main
  workflow_dispatch:

jobs:
  qualify_code:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: npm ci
        run: npm ci

      # setup eslint config file locally first:
      # npm init @eslint/config
      - name: Run ESLint
        run: npx eslint --ext .ts src/

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12
          cache: pip

      - name: Install and cache poetry
        run: make install-poetry
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Cache poetry dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: ${{ runner.os }}-poetry-

      - name: Install dependencies with poetry
        run: poetry install
        env:
          POETRY_VIRTUALENVS_IN_PROJECT: true
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Cache mypy dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/mypy
          key: ${{ runner.os }}-mypy-${{ hashFiles('**/mypy.ini') }}
          restore-keys: ${{ runner.os }}-mypy-

      - name: Static type checks with mypy
        run: make static-type-checks

      - name: Lint with ruff
        run: make lint-ruff

      - name: Run unit tests and make coverage report
        run: make run-tests-and-coverage

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          files: ./cov.xml
          verbose: true
